USE [master]
GO
declare
  @DBName nvarchar(100),
  @DataDir nvarchar(250)

-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
--
-- IMPORTANT.....
--
--
-- Run a FIND and REPLACE on "NewDBName" and replace with new database name.
--

set @DBName='NewDBName'

-- Set @DataDir to be MSSQL's data folder.
-- set @DataDir='C:\Program Files\Microsoft SQL Server\MSSQL.1\MSSQL\DATA\'


-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------



declare
--  @DataFile nvarchar(250),
--  @LogFile nvarchar(250),
  @SQL nvarchar(4000)

set @SQL = N'Create database ['+@DBName+']'
exec sp_executesql @SQL


EXEC dbo.sp_dbcmptlevel @dbname=@DBName, @new_cmptlevel=100

IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
  set @SQL = 'EXEC ['+@DBName+'].[dbo].[sp_fulltext_database] @action = ''enable'''
  exec sp_executesql @SQL
end

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ANSI_NULL_DEFAULT OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ANSI_NULL_DEFAULT OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ANSI_NULLS OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ANSI_PADDING OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ANSI_WARNINGS OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ARITHABORT OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET AUTO_CLOSE OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET AUTO_CREATE_STATISTICS ON'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET AUTO_SHRINK OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET AUTO_UPDATE_STATISTICS ON'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET CURSOR_CLOSE_ON_COMMIT OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET CURSOR_DEFAULT  GLOBAL'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET CONCAT_NULL_YIELDS_NULL OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET NUMERIC_ROUNDABORT OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET QUOTED_IDENTIFIER OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET RECURSIVE_TRIGGERS OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET DISABLE_BROKER'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET AUTO_UPDATE_STATISTICS_ASYNC OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET DATE_CORRELATION_OPTIMIZATION OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET TRUSTWORTHY OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET ALLOW_SNAPSHOT_ISOLATION OFF'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET PARAMETERIZATION SIMPLE'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET READ_WRITE'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET RECOVERY SIMPLE'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET MULTI_USER'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET PAGE_VERIFY CHECKSUM'
exec sp_executesql @SQL

set @SQL = N'ALTER DATABASE ['+@DBName+'] SET DB_CHAINING OFF'
exec sp_executesql @SQL

GO

/*
IF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'TVGUID' AND ss.name = N'dbo')
CREATE TYPE [dbo].[TVGUID] FROM [binary](16) NOT NULL
G-O
IF NOT EXISTS (SELECT * FROM sys.types st JOIN sys.schemas ss ON st.schema_id = ss.schema_id WHERE st.name = N'TELNUMBER' AND ss.name = N'dbo')
CREATE TYPE [dbo].[TELNUMBER] FROM [varchar](25) NOT NULL
G-O
*/

-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
-- Tables
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------

USE [NewDBName]
GO

-- CustomField
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELD]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CUSTOMFIELD](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[NAME] [nvarchar](30) NOT NULL,
	[MULTIVALUED] [int] NOT NULL CONSTRAINT [DF_CUSTOMFIELD_MULTIVALUED]  DEFAULT ((0)),
	[FIELDTYPEENUM] [int] NOT NULL CONSTRAINT [DF_CUSTOMFIELD_TYPE]  DEFAULT ((0)),
	[SORTORDER] [int] NOT NULL,
	[REQUIRED] [int] NOT NULL,
	[SORTMETHODENUM] [nvarchar](20) NOT NULL,
	[WIDTH] [int] NOT NULL,
	[ALIGNMENTENUM] [nvarchar](20) NOT NULL,
	[ACTIVE] [int] NOT NULL,
	[ALLOWFILTER] [int] NULL,
    [USERMAINTAINABLE] [int] NULL,
    CONSTRAINT [PK_CUSTOMFIELD] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF)
) ON [PRIMARY]
END
GO

-- Resource
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RESOURCE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RESOURCE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[USERID] [nvarchar](10) NULL,
	[NAME] [nvarchar](50) NULL,
	[LASTNAME] [nvarchar](50) NULL,
	[ACTIVEDATE] [datetime] NULL,
	[DEACTIVEDATE] [datetime] NULL,
	[ACTIVE] [int] NOT NULL,
	[CREATEDBY] [nvarchar](20) NULL,
	[CREATEDDATE] [datetime] NULL,
	[MODIFIEDBY] [nvarchar](20) NULL,
	[MODIFIEDDATE] [datetime] NULL,
	[PASSWORD] [nvarchar](64) NULL,
	[CALENDARID] [nvarchar](50) NULL,
	[WINLOGIN] [nvarchar](50) NULL,
    [RIGHTSADMIN] [int] NOT NULL CONSTRAINT [DF_RESOURCE_RIGHTSADMIN]  DEFAULT ((0)),
    [RIGHTSSWITCHBOARD] [int] NOT NULL CONSTRAINT [DF_RESOURCE_RIGHTSSWITCHBOARD]  DEFAULT ((0)),
    [RIGHTSRECEPTIONIST] [int] NOT NULL CONSTRAINT [DF_RESOURCE_RIGHTSRECEPTIONIST]  DEFAULT ((0)),
	[SYNCHRONIZECALENDAR] [int] NOT NULL CONSTRAINT [DF_RESOURCE_SYNCHRONIZECALENDAR]  DEFAULT ((0)),
    CONSTRAINT [PK_RESOURCE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ProviderSubtype
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROVIDERSUBTYPE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROVIDERSUBTYPE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[CATEGORYENUM] [int] NOT NULL,
	[TYPENAME] [nvarchar](50) NOT NULL,
    CONSTRAINT [PK_PROVIDERSUBTYPE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]) ON [PRIMARY]
END
GO

-- ProviderCategory
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROVIDERCATEGORY]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROVIDERCATEGORY](
	[RECID] [int] NOT NULL,
	[CATEGORYNAME] [nvarchar](50) NOT NULL,
    CONSTRAINT [PK_PROVIDERCATEGORY] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- PhoneBook
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PHONEBOOK]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PHONEBOOK](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[NUMBER] [nvarchar](255) NULL,
	[NAME] [nvarchar](255) NULL,
	[ADRESS] [nvarchar](255) NULL,
    CONSTRAINT [PK_PHONEBOOK] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ProviderValue
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROVIDERVALUE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROVIDERVALUE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[PROVIDERID] [int] NOT NULL,
	[PARAMETERID] [int] NOT NULL,
	[PARAMVALUE] [nvarchar](500) NULL,
    CONSTRAINT [PK_PROVIDERVALUE] PRIMARY KEY CLUSTERED ([RECID] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- RCLPhone
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RCLPHONE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RCLPHONE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[EXTERNALNO] [nvarchar](50) NULL,
    CONSTRAINT [PK_PHONE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY],
    CONSTRAINT [IX_PHONE] UNIQUE NONCLUSTERED ([EXTERNALNO] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- PBXDevice
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PBXDEVICE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PBXDEVICE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[DEVICEID] [varchar](10) NOT NULL,
	[TYPE] [int] NOT NULL CONSTRAINT [DF_PBXDEVICE_TYPE]  DEFAULT ((0)),
	[PROVIDERID] [int] NULL,
    CONSTRAINT [PK_PBXDEVICE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- State
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[NAME] [nvarchar](50) NOT NULL,
	[SHORTNAME] [nvarchar](50) NULL,
	[DISPLAYNAME] [nvarchar](50) NULL,
	[SHOWDISPLAYNAME] [nvarchar](50) NOT NULL,
	[TEXTREQUIRED] [int] NOT NULL,
	[STATELENGTH] [int] NOT NULL,
	[ENDSTAMP] [int] NOT NULL,
	[EXPECTEDEND] [int] NOT NULL,
	[ACTIVE] [int] NOT NULL,
	[SORTORDER] [int] NOT NULL,
	[COLOUR] [int] NOT NULL,
	[STATECLASS] [int] NULL,
	[SUGGESTEDNEXTPROFILE] [int] NULL,
	[SUGGESTEDNEXTPROFILENAME] [nvarchar](50) NOT NULL,
	[ALLOWRESERVATION] [int] NOT NULL,
	[ACTIVATERESERVATIONS] [int] NOT NULL,
	[SUGGESTEDLENGTH] [int] NOT NULL,
	[DESCRIPTION] [nvarchar](1000) NOT NULL,
	[SUGGESTROUNDRULEENUM] [int] NOT NULL CONSTRAINT [DF_STATE_SUGGESTROUNDRULEENUM] DEFAULT ((1)),
	[SUGGESTROUNDTYPEENUM] [int] NOT NULL CONSTRAINT [DF_STATE_SUGGESTROUNDTYPEENUM] DEFAULT ((1)),
	[ACTIVATEFROMSWITCHBOARD] [int] NOT NULL CONSTRAINT [DF_STATE_ACTIVATEFROMSWITCHBOARD]  DEFAULT ((1)),
	[ACTIVATEFROMCLIENT] [int] NOT NULL CONSTRAINT [DF_STATE_ACTIVATEFROMCLIENT]  DEFAULT ((1)),
	[ACTIVATEFROMSMS] [int] NOT NULL CONSTRAINT [DF_STATE_ACTIVATEFROMSMS]  DEFAULT ((1)),
    CONSTRAINT [PK_STATES] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ClientSetting
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLIENTSETTING]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CLIENTSETTING](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NULL,
	[SETTINGTYPE] [int] NOT NULL,
	[CLIENTTYPE] [int] NOT NULL,
	[MACHINENAME] [varchar](50) NULL,
    CONSTRAINT [PK_CLIENTSETTING] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY],
    CONSTRAINT [IX_CLIENTSETTING] UNIQUE NONCLUSTERED ([RESOURCEID] ASC, [MACHINENAME] ASC, [CLIENTTYPE] ASC)
      WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0=default, 1=machine, 2=global' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'CLIENTSETTING', @level2type=N'COLUMN', @level2name=N'SETTINGTYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Client, Switchboard, Reception' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'CLIENTSETTING', @level2type=N'COLUMN', @level2name=N'CLIENTTYPE'
END
GO

-- ClientDetail
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLIENTSETTINGDETAIL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CLIENTSETTINGDETAIL](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[CLIENTSETTINGID] [int] NOT NULL,
	[PARAMNAME] [varchar](50) NOT NULL,
	[PARAMVALUE] [nvarchar](max) NULL,
	[PARAMTYPE] [int] NOT NULL,
	[FORCEUSE] [int] NOT NULL CONSTRAINT [DF_CLIENTSETTINGDETAIL_FORCEUSE]  DEFAULT ((0)),
    CONSTRAINT [PK_CLIENTSETTINGDETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'integer, string, float' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'CLIENTSETTINGDETAIL', @level2type=N'COLUMN', @level2name=N'PARAMTYPE'
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'0 false, 1true' ,@level0type=N'SCHEMA', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'CLIENTSETTINGDETAIL', @level2type=N'COLUMN', @level2name=N'FORCEUSE'
END
GO

-- Profile
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROFILE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROFILE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[NAME] [nvarchar](50) NOT NULL,
	[SHORTNAME] [nvarchar](50) NOT NULL,
	[ACTIVATEFROMCLIENT] [int] NOT NULL CONSTRAINT [DF_PROFILE_ACTIVATEFROMCLIENT]  DEFAULT ((1)),
	[ACTIVATEFROMCALENDAR] [int] NOT NULL CONSTRAINT [DF_PROFILE_ACTIVATEFROMCALENDAR]  DEFAULT ((0)),
	[ACTIVATEFROMSMS] [int] NOT NULL CONSTRAINT [DF_PROFILE_ACTIVATEFROMSMS]  DEFAULT ((0)),
	[STATEID] [int] NULL,
	[SUGGESTEDLENGTH] [int] NULL,
	[SUGGESTEDROUNDRULEENUM] [int] NULL,
	[SUGGESTEDROUNDTYPEENUM] [int] NULL,
	[DESCRIPTION] [nvarchar](1000) NULL,
	[LOCATION] [nvarchar](50) NULL,
	[FORWARDTODEVICEENUM] [int] NULL,
	[FORWARDTONUMBER] [nvarchar](50) NULL,
	[FORWARDTOTYPEENUM] [int] NULL,
	[NEXTPROFILEID] [int] NULL,
	[NEXTSTATEID] [int] NULL,
	[NEXTDESCRIPTION] [nvarchar](1000) NULL,
	[NEXTLOCATION] [nvarchar](50) NULL,
	[NEXTFORWARDTODEVICEENUM] [int] NULL,
	[NEXTFORWARDTONUMBER] [nvarchar](50) NULL,
	[NEXTFORWARDTOTYPEENUM] [int] NULL,
	[ENDTYPE] [int] NULL,
	[SORTORDER] [int] NOT NULL,
	[ACTIVE] [int] NOT NULL CONSTRAINT [DF_PROFILE_ACTIVE] DEFAULT ((1)),
	[ACTIVATEFROMSWITCHBOARD] [int] NOT NULL CONSTRAINT [DF_PROFILE_ACTIVATEFROMSWITCHBOARD]  DEFAULT ((1)),
    CONSTRAINT [PK_PROFILE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ProviderParameter
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROVIDERPARAMETER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROVIDERPARAMETER](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[SUBTYPEID] [int] NOT NULL,
	[PARAMSHORTNAME] [nvarchar](50) NOT NULL,
	[PARAMNAME] [nvarchar](50) NOT NULL,
	[DEFAULTVALUE] [nvarchar](500) NULL,
	[DESCRIPTION] [nvarchar](500) NULL,
    [SORTORDER] [int] NULL,
    CONSTRAINT [PK_PROVIDERPARAMETER] PRIMARY KEY CLUSTERED ([RECID] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- Provider
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROVIDER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[PROVIDER](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[INSTANCENAME] [nvarchar](70) NOT NULL,
	[CAPTION] [nvarchar](150) NULL,
	[DESCRIPTION] [nvarchar](500) NULL,
	[CATEGORYENUM] [int] NOT NULL,
	[SUBTYPE] [int] NULL,
	[MACHINE] [nvarchar](50) NULL,
	[ACTIVE] [int] NOT NULL CONSTRAINT [DF_PROVIDER_ACTIVE]  DEFAULT ((1)),
    CONSTRAINT [PK_PROVIDERS] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- CustomFieldValue
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDVALUE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CUSTOMFIELDVALUE](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[CUSTOMFIELDID] [int] NOT NULL,
	[VALUE] [nvarchar](100) NOT NULL,
    CONSTRAINT [PK_CUSTOMFIELDVALUE] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- CustomFieldAssociation
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDASSOCIATION]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[CUSTOMFIELDASSOCIATION](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[CUSTOMFIELDID] [int] NOT NULL,
	[CUSTOMFIELDVALUEID] [int] NULL,
	[CUSTOMFIELDVALUE] [nvarchar](100) NULL,
    CONSTRAINT [PK_CUSTOMFIELDASSOCIATION] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateHistory
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATEHISTORY]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATEHISTORY](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[ORIGINATORID] [int] NULL,
	[DESCRIPTION] [nvarchar](100) NULL,
	[STATEID] [int] NOT NULL,
	[STATESTART] [datetime] NOT NULL,
	[STATEEND] [datetime] NULL,
	[ORIGINALSTATEEND] [datetime] NULL,
	[RESERVATION] [int] NOT NULL,
    CONSTRAINT [PK_STATEHISTORY] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateCurrent
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATECURRENT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATECURRENT](
	[RESOURCEID] [int] NOT NULL,
	[RESERVATIONID] [int] NOT NULL,
    CONSTRAINT [PK_CURRENTSTATE] PRIMARY KEY CLUSTERED ([RESOURCEID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- Reservation
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RESERVATION]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RESERVATION](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[CALENDARKEY] [nvarchar](max) NULL,
	[ORIGINATORID] [int] NULL,
	[DESCRIPTION] [nvarchar](max) NULL,
	[LOCATION] [nchar](50) NULL,
	[STATEID] [int] NOT NULL,
	[STATESTART] [datetime] NOT NULL,
	[STATEEND] [datetime] NULL,
	[ACTUALEND] [int] NOT NULL CONSTRAINT [DF_STATERESERVATION_ACTUALEND]  DEFAULT ((0)),
	[RESERVATIONTYPE] [int] NOT NULL CONSTRAINT [DF_RESERVATION_RESERVATIONTYPE]  DEFAULT ((1)),
	[SYNCSTATE] [int] NOT NULL CONSTRAINT [DF_STATERESERVATION_SYNCSTATE]  DEFAULT ((0)),
	[HISTORY] [int] NOT NULL CONSTRAINT [DF_STATERESERVATION_HISTORY]  DEFAULT ((0)),
	[HISTORYREASON] [nvarchar](50) NOT NULL CONSTRAINT [DF_RESERVATION_HISTORYREASON]  DEFAULT (N'N/A'),
    CONSTRAINT [PK_STATERESERVATIONS] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ResourceCustomField
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RESOURCECUSTOMFIELD]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RESOURCECUSTOMFIELD](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[CUSTOMFIELDID] [int] NOT NULL,
--	[VALUE] [varchar](500) NULL,
    CUSTOMFIELDVALUEID int,
    CUSTOMFIELDVALUE nvarchar(100),
    constraint FK_RESOURCECUSTOMFIELD_CUSTOMFIELDVALUE foreign key (CUSTOMFIELDVALUEID) references CUSTOMFIELDVALUE(RECID) on delete CASCADE,
    CONSTRAINT [PK_RESOURCECUSTOMFIELD] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ResourceDetail
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RESOURCEDETAIL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RESOURCEDETAIL](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESOURCEID] [int] NOT NULL,
	[MAINTYPEENUM] [int] NOT NULL,
	[SUBTYPEENUM] [int] NOT NULL,
	[DEFPARAMETER] [int] NULL,
	[ENABLED] [int] NULL,
	[PARAMNAME] [nvarchar](50) NULL,
	[PARAMVALUE] [nvarchar](4000) NULL,
	[SORTORDER] [int] NULL,
    CONSTRAINT [PK_RESDETAILS] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- nonclustered index on ResourceDetail
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[RESOURCEDETAIL]') AND name = N'IX_RESDETAILS')
CREATE NONCLUSTERED INDEX [IX_RESDETAILS] ON [dbo].[RESOURCEDETAIL] 
(
	[RESOURCEID] ASC,
	[MAINTYPEENUM] ASC,
	[SUBTYPEENUM] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO

-- RCLCaller
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RCLCALLER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RCLCALLER](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[CALLERID] [int] NOT NULL,
	[DEVICEID] [nvarchar](50) NOT NULL,
	[TIMESTAMP] [datetime] NOT NULL,
    CONSTRAINT [PK_CALLERDETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateCurrentInfoDetail
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATECURRENTINFODETAIL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATECURRENTINFODETAIL](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[STATECURRENTINFOID] [int] NOT NULL,
	[PARAMTYPEENUM] [nvarchar](20) NOT NULL,
	[PARAMNAME] [nvarchar](20) NOT NULL,
	[PARAMVALUE] [nvarchar](100) NOT NULL,
    CONSTRAINT [PK_STATECURRENTINFODETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateHistoryInfoDetail
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATEHISTORYINFODETAIL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATEHISTORYINFODETAIL](
	[RECID] [int] NOT NULL,
	[STATEHISTORYINFOID] [int] NOT NULL,
	[PARAMTYPEENUM] [nvarchar](20) NOT NULL,
	[PARAMNAME] [nvarchar](20) NOT NULL,
	[PARAMVALUE] [nvarchar](100) NOT NULL,
    CONSTRAINT [PK_STATEHISTORYINFODETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateHistoryInfo
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATEHISTORYINFO]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATEHISTORYINFO](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[STATEHISTORYID] [int] NOT NULL,
	[TYPEENUM] [nvarchar](20) NOT NULL,
    CONSTRAINT [PK_STATEHISTORYDETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- StateCurrentInfo
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STATECURRENTINFO]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[STATECURRENTINFO](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[STATECURRENTID] [int] NOT NULL,
	[TYPEENUM] [nvarchar](20) NULL,
    CONSTRAINT [PK_STATECURRENTDETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

-- ReservationDetail
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RESERVATIONDETAIL]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[RESERVATIONDETAIL](
	[RECID] [int] IDENTITY(1,1) NOT NULL,
	[RESERVATIONID] [int] NOT NULL,
	[SETTINGTYPE] [int] NOT NULL CONSTRAINT [DF_RESERVATIONDETAIL_SETTINGTYPE]  DEFAULT ((0)),
	[PARAMNAME] [nvarchar](50) NOT NULL,
	[PARAMVALUE] [nvarchar](max) NULL,
    CONSTRAINT [PK_STATERESERVATIONDETAIL] PRIMARY KEY CLUSTERED ([RECID] ASC) WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

if not exists(select * from sys.objects where object_id=OBJECT_ID(N'[dbo].[STATEFINISH]') and type in (N'U'))
begin
CREATE TABLE [dbo].[STATEFINISH](
	[RESOURCEID] [int] NOT NULL,
	[RESERVATIONID] [int] NOT NULL,
	[STATESTART] [datetime] NOT NULL,
	[STATEEND] [datetime] NOT NULL,
 CONSTRAINT [PK_STATEFINISH] PRIMARY KEY CLUSTERED ([RESOURCEID] ASC,[RESERVATIONID] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
end
GO

--SETTING
if not exists(select * from sys.objects where object_id=OBJECT_ID(N'[dbo].[SETTING]') and type in (N'U'))
begin
CREATE TABLE [dbo].[SETTING](
	[PARAMNAME] [nvarchar](50) NOT NULL,
	[PARAMVALUE] [nvarchar] (250) NOT NULL,
 CONSTRAINT [PK_SETTING] PRIMARY KEY CLUSTERED ([PARAMNAME] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
end
GO

if not exists(select * from sys.objects where object_id=OBJECT_ID(N'[dbo].[LICENSE]') and type in (N'U'))
begin
  CREATE TABLE [dbo].[LICENSE](
	  [RECID] [int] not NULL,
  	  [LICENSE] [image] NULL,
     CONSTRAINT [PK_LICENSE] PRIMARY KEY CLUSTERED ([RECID] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
    ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
end
GO


if not exists(select * from sys.objects where object_id=OBJECT_ID(N'[dbo].[FORWARDINGRULE]') and type in (N'U'))
begin
  CREATE TABLE [dbo].[FORWARDINGRULE](
      [RECID] [int] NOT NULL,
      [RULEDEFINITION] [nvarchar](max) NULL,
      CONSTRAINT [PK_FORWARDINGRULE] PRIMARY KEY CLUSTERED ([RECID] ASC)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
end
GO


-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
-- check constraints
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------

IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_CUSTOMFIELD_ACTIVE]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELD]'))
ALTER TABLE [dbo].[CUSTOMFIELD]  WITH CHECK ADD  CONSTRAINT [CK_CUSTOMFIELD_ACTIVE] CHECK  (([ACTIVE]=(1) OR [ACTIVE]=(0)))
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_CUSTOMFIELD_MULTIVALUED]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELD]'))
ALTER TABLE [dbo].[CUSTOMFIELD]  WITH CHECK ADD  CONSTRAINT [CK_CUSTOMFIELD_MULTIVALUED] CHECK  (([MULTIVALUED]=(1) OR [MULTIVALUED]=(0)))
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_RESOURCE_ACTIVE]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCE]'))
ALTER TABLE [dbo].[RESOURCE]  WITH CHECK ADD  CONSTRAINT [CK_RESOURCE_ACTIVE] CHECK  (([ACTIVE]=(0) OR [ACTIVE]=(1)))
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CUSTOMFILEDVALUE_CUSTOMFIELD]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDVALUE]'))
ALTER TABLE [dbo].[CUSTOMFIELDVALUE]  WITH CHECK ADD  CONSTRAINT [FK_CUSTOMFILEDVALUE_CUSTOMFIELD] FOREIGN KEY([CUSTOMFIELDID])
REFERENCES [dbo].[CUSTOMFIELD] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CUSTOMFIELDASSOCIATION_CUSTOMFIELD]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDASSOCIATION]'))
ALTER TABLE [dbo].[CUSTOMFIELDASSOCIATION]  WITH CHECK ADD  CONSTRAINT [FK_CUSTOMFIELDASSOCIATION_CUSTOMFIELD] FOREIGN KEY([CUSTOMFIELDID])
REFERENCES [dbo].[CUSTOMFIELD] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CUSTOMFIELDASSOCIATION_CUSTOMFILEDVALUE]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDASSOCIATION]'))
ALTER TABLE [dbo].[CUSTOMFIELDASSOCIATION]  WITH CHECK ADD  CONSTRAINT [FK_CUSTOMFIELDASSOCIATION_CUSTOMFILEDVALUE] FOREIGN KEY([CUSTOMFIELDVALUEID])
REFERENCES [dbo].[CUSTOMFIELDVALUE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CUSTOMFIELDASSOCIATION_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDASSOCIATION]'))
ALTER TABLE [dbo].[CUSTOMFIELDASSOCIATION]  WITH CHECK ADD  CONSTRAINT [FK_CUSTOMFIELDASSOCIATION_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_CUSTOMFIELDASSOCIATION_REFERENCEORVALUE]') AND parent_object_id = OBJECT_ID(N'[dbo].[CUSTOMFIELDASSOCIATION]'))
ALTER TABLE [dbo].[CUSTOMFIELDASSOCIATION]  WITH CHECK ADD  CONSTRAINT [CK_CUSTOMFIELDASSOCIATION_REFERENCEORVALUE] CHECK  ((([CUSTOMFIELDVALUEID] IS NULL OR [CUSTOMFIELDVALUE] IS NULL) AND NOT ([CUSTOMFIELDVALUEID] IS NULL AND [CUSTOMFIELDVALUE] IS NULL)))
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATEHISTORY_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATEHISTORY]'))
ALTER TABLE [dbo].[STATEHISTORY]  WITH CHECK ADD  CONSTRAINT [FK_STATEHISTORY_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATEHISTORY_RESOURCE_ORIGINATOR]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATEHISTORY]'))
ALTER TABLE [dbo].[STATEHISTORY]  WITH CHECK ADD  CONSTRAINT [FK_STATEHISTORY_RESOURCE_ORIGINATOR] FOREIGN KEY([ORIGINATORID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATEHISTORY_STATE]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATEHISTORY]'))
ALTER TABLE [dbo].[STATEHISTORY]  WITH CHECK ADD  CONSTRAINT [FK_STATEHISTORY_STATE] FOREIGN KEY([STATEID])
REFERENCES [dbo].[STATE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATECURRENT_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATECURRENT]'))
ALTER TABLE [dbo].[STATECURRENT]  WITH CHECK ADD  CONSTRAINT [FK_STATECURRENT_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATERESERVATION_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESERVATION]'))
ALTER TABLE [dbo].[RESERVATION]  WITH CHECK ADD  CONSTRAINT [FK_STATERESERVATION_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATERESERVATION_RESOURCE1]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESERVATION]'))
ALTER TABLE [dbo].[RESERVATION]  WITH CHECK ADD  CONSTRAINT [FK_STATERESERVATION_RESOURCE1] FOREIGN KEY([ORIGINATORID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATERESERVATION_STATE1]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESERVATION]'))
ALTER TABLE [dbo].[RESERVATION]  WITH CHECK ADD  CONSTRAINT [FK_STATERESERVATION_STATE1] FOREIGN KEY([STATEID])
REFERENCES [dbo].[STATE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_RESOURCECUSTOMFIELD_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCECUSTOMFIELD]'))
ALTER TABLE [dbo].[RESOURCECUSTOMFIELD]  WITH CHECK ADD  CONSTRAINT [FK_RESOURCECUSTOMFIELD_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_RESOURCEDETAIL_RESOURCE]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCEDETAIL]'))
ALTER TABLE [dbo].[RESOURCEDETAIL]  WITH CHECK ADD  CONSTRAINT [FK_RESOURCEDETAIL_RESOURCE] FOREIGN KEY([RESOURCEID])
REFERENCES [dbo].[RESOURCE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CALLER_PHONE]') AND parent_object_id = OBJECT_ID(N'[dbo].[RCLCALLER]'))
ALTER TABLE [dbo].[RCLCALLER]  WITH CHECK ADD  CONSTRAINT [FK_CALLER_PHONE] FOREIGN KEY([CALLERID])
REFERENCES [dbo].[RCLPHONE] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATECURRENTINFODETAIL_STATECURRENTINFO]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATECURRENTINFODETAIL]'))
ALTER TABLE [dbo].[STATECURRENTINFODETAIL]  WITH CHECK ADD  CONSTRAINT [FK_STATECURRENTINFODETAIL_STATECURRENTINFO] FOREIGN KEY([STATECURRENTINFOID])
REFERENCES [dbo].[STATECURRENTINFO] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATEHISTORYINFODETAIL_STATEHISTORYINFO]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATEHISTORYINFODETAIL]'))
ALTER TABLE [dbo].[STATEHISTORYINFODETAIL]  WITH CHECK ADD  CONSTRAINT [FK_STATEHISTORYINFODETAIL_STATEHISTORYINFO] FOREIGN KEY([STATEHISTORYINFOID])
REFERENCES [dbo].[STATEHISTORYINFO] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATEHISTORYDETAIL_STATEHISTORY]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATEHISTORYINFO]'))
ALTER TABLE [dbo].[STATEHISTORYINFO]  WITH CHECK ADD  CONSTRAINT [FK_STATEHISTORYDETAIL_STATEHISTORY] FOREIGN KEY([STATEHISTORYID])
REFERENCES [dbo].[STATEHISTORY] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATECURRENTDETAIL_STATECURRENT]') AND parent_object_id = OBJECT_ID(N'[dbo].[STATECURRENTINFO]'))
ALTER TABLE [dbo].[STATECURRENTINFO]  WITH CHECK ADD  CONSTRAINT [FK_STATECURRENTDETAIL_STATECURRENT] FOREIGN KEY([STATECURRENTID])
REFERENCES [dbo].[STATECURRENT] ([RESOURCEID])
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_STATERESERVATIONDETAIL_STATERESERVATIONID_STATERESERVATION]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESERVATIONDETAIL]'))
ALTER TABLE [dbo].[RESERVATIONDETAIL]  WITH CHECK ADD  CONSTRAINT [FK_STATERESERVATIONDETAIL_STATERESERVATIONID_STATERESERVATION] FOREIGN KEY([RESERVATIONID])
REFERENCES [dbo].[RESERVATION] ([RECID])
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_RESOURCE_RIGHTSADMIN]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCE]'))
ALTER TABLE [dbo].[RESOURCE]  WITH CHECK ADD  CONSTRAINT [CK_RESOURCE_RIGHTSADMIN] CHECK  (([RIGHTSADMIN]=(1) OR [RIGHTSADMIN]=(0)))
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_RESOURCE_RIGHTSSWITCHBOARD]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCE]'))
ALTER TABLE [dbo].[RESOURCE]  WITH CHECK ADD  CONSTRAINT [CK_RESOURCE_RIGHTSSWITCHBOARD] CHECK  (([RIGHTSSWITCHBOARD]=(1) OR [RIGHTSSWITCHBOARD]=(0)))
GO
IF NOT EXISTS (SELECT * FROM sys.check_constraints WHERE object_id = OBJECT_ID(N'[dbo].[CK_RESOURCE_RIGHTSRECEPTIONIST]') AND parent_object_id = OBJECT_ID(N'[dbo].[RESOURCE]'))
ALTER TABLE [dbo].[RESOURCE]  WITH CHECK ADD  CONSTRAINT [CK_RESOURCE_RIGHTSRECEPTIONIST] CHECK  (([RIGHTSRECEPTIONIST]=(1) OR [RIGHTSRECEPTIONIST]=(0)))
GO



-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
-- Values
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------


-- Provider category
if not EXISTS(select top 1 * from PROVIDERCATEGORY) 
BEGIN
  insert into PROVIDERCATEGORY(RECID, CATEGORYNAME) values (1,'Server')
  insert into PROVIDERCATEGORY(RECID, CATEGORYNAME) values (2,'Telephony')
  insert into PROVIDERCATEGORY(RECID, CATEGORYNAME) values (3,'Calendar')
  insert into PROVIDERCATEGORY(RECID, CATEGORYNAME) values (4,'SMS')
  insert into PROVIDERCATEGORY(RECID, CATEGORYNAME) values (5,'MobileStatus')
END
GO

-- provider subtype
if not EXISTS(select top 1 * from PROVIDERSUBTYPE) 
BEGIN
  insert into PROVIDERSUBTYPE(CATEGORYENUM, TYPENAME) values(1,'Server')
  insert into PROVIDERSUBTYPE(CATEGORYENUM, TYPENAME) values(2,'HiPath')
  insert into PROVIDERSUBTYPE(CATEGORYENUM, TYPENAME) values(4,'SMS')
  insert into PROVIDERSUBTYPE(CATEGORYENUM, TYPENAME) values(5,'TDC')
END
GO

-- provider parameter
if not EXISTS(select top 1 * from PROVIDERPARAMETER)
BEGIN
  -- HiPath
  --insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'DIRECTCONNECTION','Direct Connection','FALSE','Connect directly from TV server without using a phone connector (TRUE or FALSE)', 1 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'IP','IP Address','127.0.0.1','Hip Address of HiPath', 0 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PORT','Port','7001','Port number for HiPath access', 1 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PBXTRUNKCODE','PBX Trunk Code','0','Outgoing trunk access code', 2 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'INCOMINGTRUNKCODE','Incoming Trunk Code',NULL,'In case HiPath adds a trunk code to incoming A-numbers, trunk code should be defined here', 3 from PROVIDERSUBTYPE where TYPENAME='HiPath'  
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'INTERNATIONALPREFIX','International Prefix','00','International prefix', 4 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'INTERNATIONALCODE','International Code','298','International dialing code', 5 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'AREATRUNKCODE','Area Trunk Code',NULL,'Trunk access code used in HiPath''''s area', 6 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'LOCALSTART','Local Start','100','Start number of internal devices', 7 from PROVIDERSUBTYPE where TYPENAME='HiPath'  
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'LOCALEND','Local End','200','End number of internal devices', 8 from PROVIDERSUBTYPE where TYPENAME='HiPath'
  
  
  
  -- SMS
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'COMPORT','COM Port','1','GSM Station''''s COM port (1, 2...)', 0 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'BAUDRATE','Baudrate','2400','GSM Station''''s baud rate', 1 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PIN','Pin',NULL,'GSM Station''s pin code', 2 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SERVICECENTER','Service center',NULL,'GSM Station''s service center', 3 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PREFSTORAGE','Preferred Storage','SM','GSM Station''s preferred storage (SM or ME)', 4 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'STARTUPSCRIPT','Startup Script',NULL,'GSM Station''s startup script', 5 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PREFIX','Prefix',NULL,'Messages'' prefix', 6 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'DROPNATDIGITS','Drop nat. Digits',NULL,'Drop National Digits', 7 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'INPUTONLY','Input Only','0','Only accept input (Disable sending of messages) (0=no, 1=yes)', 8 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SCRECEIPTS','State Change Receipts','0','Send receipts for state changes (0=no, 1=yes)', 9 from PROVIDERSUBTYPE where TYPENAME='SMS'
  --insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SMTPSERVER','SMTP Server',NULL,'SMTP server name', 10 from PROVIDERSUBTYPE where TYPENAME='SMS'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'ACTIVATE_FORWARDING_CODES','Activate forwarding states',NULL,'States for which forwarding is activated', 10 from PROVIDERSUBTYPE where TYPENAME='SMS'
  --insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION) select RECID,'ALLOWED_CODES','Allowed codes',NULL,'Codes allowed for statechange in SMS Connector' from PROVIDERSUBTYPE where TYPENAME='SMS'
  
  -- TDC
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'port','SOAP web service port','8193','Port the SOAP web service listens for mobile phone state changes sent from TDC', 0 from PROVIDERSUBTYPE where TYPENAME='TDC'

  -- Server
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'RESETTOSTATE','Reset current to state at midnight','','Id of state to reset current states to at midnight', 0 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'RESETATMIDNIGHT','Reset current states','1','Reset current states at midnight (0 FALSE, 1 TRUE)', 1 from PROVIDERSUBTYPE where TYPENAME='Server'  
  --insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'CALENDARENDSETTINGS','Calendar end settings','1','End code to apply to calendar appointments. Empty if end settings are to be set as undefined', 2 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'PINGINTERVAL','Interval between pings','60','Seconds between pings if not other communication is present', 2 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SMTPHost','SMTP host for sending mail','mail.domain.com','Name of SMTP server to use to send mail from server', 3 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SMTPPort','SMTP port for sending mail','25','Name of SMTP port for sending mail', 4 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SMTPUsername','Username to log into SMTP server',NULL,'Username for logging on to SMTP server', 5 from PROVIDERSUBTYPE where TYPENAME='Server'
  insert into PROVIDERPARAMETER(SUBTYPEID, PARAMSHORTNAME, PARAMNAME, DEFAULTVALUE, DESCRIPTION, SORTORDER) select RECID,'SMTPPassword','Password for SMTP user login',NULL,'Password for SMTP user login', 6 from PROVIDERSUBTYPE where TYPENAME='Server'
END
GO

-- SERVER parameter values
if not EXISTS(select * from PROVIDER where Instancename='SERVER' and Categoryenum=1)
BEGIN
  exec sp_executesql N'	insert into PROVIDER (
							INSTANCENAME, CAPTION, DESCRIPTION, CATEGORYENUM, 
							SUBTYPE, MACHINE, ACTIVE)
						select
							''SERVER'', ''Totalview server'', ''Settings for Totalview server'', 1,
							RECID, NULL, 1
						from 
							PROVIDERSUBTYPE
						where
							CATEGORYENUM=1'

  exec sp_executesql N'	insert into PROVIDERVALUE (PROVIDERID, PARAMETERID, PARAMVALUE) 
						select p.RECID, param.RECID, ''Not_registered''
						from PROVIDER p, PROVIDERPARAMETER param
						where 
						  p.INSTANCENAME=''SERVER'' and
						  param.PARAMSHORTNAME=''RESETTOSTATE'' and 
						  param.SUBTYPEID=(select top 1 RECID from PROVIDERSUBTYPE where CATEGORYENUM=1)'

  exec sp_executesql N'	insert into PROVIDERVALUE (PROVIDERID, PARAMETERID, PARAMVALUE) 
						select p.RECID, param.RECID, param.DEFAULTVALUE
						from PROVIDER p, PROVIDERPARAMETER param
						where 
						  p.INSTANCENAME=''SERVER'' and
						  param.PARAMSHORTNAME<>''RESETTOSTATE'' and 
						  param.SUBTYPEID=(select top 1 RECID from PROVIDERSUBTYPE where CATEGORYENUM=1)' 
END
GO

if not exists(select top 1 * from STATE)
BEGIN
  set identity_insert STATE ON
  INSERT INTO [STATE] ([RECID],[NAME],[SHORTNAME],[DISPLAYNAME],[SHOWDISPLAYNAME],[TEXTREQUIRED],[STATELENGTH],[ENDSTAMP],[EXPECTEDEND],[ACTIVE],[SORTORDER],[COLOUR],[STATECLASS],[SUGGESTEDNEXTPROFILE],[SUGGESTEDNEXTPROFILENAME],[ALLOWRESERVATION],[ACTIVATERESERVATIONS],[SUGGESTEDLENGTH],[DESCRIPTION],[SUGGESTROUNDRULEENUM],[SUGGESTROUNDTYPEENUM],[ACTIVATEFROMSWITCHBOARD],[ACTIVATEFROMCLIENT],[ACTIVATEFROMSMS])VALUES(27,'Not registered','Not_registered',NULL,'1',0,1,1,1,1,0,0,4,0,'',0,1,0,'',1,1,1,1,0)
  set identity_insert STATE OFF
END
GO

if not exists(select top 1 * from CLIENTSETTING)
BEGIN
  set identity_insert CLIENTSETTING ON
    INSERT INTO [CLIENTSETTING] ([RECID],[RESOURCEID],[SETTINGTYPE],[CLIENTTYPE],[MACHINENAME])VALUES(1,-1,2,0,'STANDARD (ALL MACHINES)')
    INSERT INTO [CLIENTSETTING] ([RECID],[RESOURCEID],[SETTINGTYPE],[CLIENTTYPE],[MACHINENAME])VALUES(2,-1,2,3,'STANDARD (ALL MACHINES)')
    INSERT INTO [CLIENTSETTING] ([RECID],[RESOURCEID],[SETTINGTYPE],[CLIENTTYPE],[MACHINENAME])VALUES(3,-1,2,4,'STANDARD (ALL MACHINES)')
  set identity_insert CLIENTSETTING OFF
END
GO

if not exists(select top 1 *  from CLIENTSETTINGDETAIL)
BEGIN
  --INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(1,'USERLISTSETTINGS','"231,""1,13,15,16,17,4,5,6,8,0"",0,1","Home,Mail,Location,""State name"",""State class"",Text,""Phone Forwarding"",Local,Mobile,Start,End,Work,""User Id"",""Rec Id"",Title,Division,Capabilities'+char(13)+char(10)+'""0,76"",""0,53"",""0,53"",""0,53"",""0,53"",""1,136"",""1,98"",""1,53"",""1,65"",""1,114"",""1,79"",""0,53"",""0,53"",""0,53"",""1,152"",""1,142"",""1,107""'+char(13)+char(10)+'"',1,0)
  --INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(2,'USERLISTSETTINGS','"198,""1,13,15,16,17,4,5,6,8,0"",0,1","Text,""Phone Forwarding"",Local,Mobile,Start,End,Home,Location,""State name"",""State class"",Work,Mail,""User Id"",""Rec Id"",Title,Division,Capabilities'+char(13)+char(10)+'""1,121"",""1,93"",""1,53"",""1,82"",""1,68"",""1,74"",""0,76"",""0,53"",""0,53"",""0,53"",""0,53"",""0,53"",""0,53"",""0,53"",""1,152"",""1,142"",""1,107""'+char(13)+char(10)+'"',1,0)
  --INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(3,'USERLISTSETTINGS','"231,""1,13,15,16,17,4,5,6,8,0"",0,1","Home,Mail,Location,""State name"",""State class"",Text,""Phone Forwarding"",Local,Mobile,Start,End,Work,""User Id"",""Rec Id"",Title,Division,Capabilities'+char(13)+char(10)+'""0,76"",""0,53"",""0,53"",""0,53"",""0,53"",""1,136"",""1,98"",""1,53"",""1,65"",""1,114"",""1,79"",""0,53"",""0,53"",""0,53"",""1,152"",""1,142"",""1,107""'+char(13)+char(10)+'"',1,0)
  INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(1,'XMLUSERLISTSETTINGS',
'<SECTIONS NETVERSION="2489"><SECTION CAPTION="FixedColumn" WIDTH="231" INDEX="-1" VISIBLE="1" SEARCH="1" SORT="ASCENDING"/>
  <SECTION CAPTION="Text" TYPE="ColumnDefinition" MASTERINDEX="5" WIDTH="136" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Phone Forwarding" TYPE="ColumnDefinition" MASTERINDEX="2" WIDTH="98" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Local" TYPE="ColumnDefinition" MASTERINDEX="8" WIDTH="53" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Mobile" TYPE="ColumnDefinition" MASTERINDEX="10" WIDTH="65" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Start" TYPE="ColumnDefinition" MASTERINDEX="6" WIDTH="114" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="End" TYPE="ColumnDefinition" MASTERINDEX="7" WIDTH="79" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Title" TYPE="CustomField" RECID="18" WIDTH="152" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Division" TYPE="CustomField" RECID="11" WIDTH="142" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Capabilities" TYPE="CustomField" RECID="12" WIDTH="107" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Today''s Calendar" TYPE="ColumnDefinition" MASTERINDEX="15" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Sip" TYPE="ColumnDefinition" MASTERINDEX="16" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Lync State" TYPE="ColumnDefinition" MASTERINDEX="17" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Home" TYPE="ColumnDefinition" MASTERINDEX="11" WIDTH="76" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Mail" TYPE="ColumnDefinition" MASTERINDEX="12" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Location" TYPE="ColumnDefinition" MASTERINDEX="13" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State name" TYPE="ColumnDefinition" MASTERINDEX="3" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State class" TYPE="ColumnDefinition" MASTERINDEX="4" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Work" TYPE="ColumnDefinition" MASTERINDEX="9" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="User Id" TYPE="ColumnDefinition" MASTERINDEX="1" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Rec Id" TYPE="ColumnDefinition" MASTERINDEX="14" WIDTH="53" VISIBLE="0" SEARCH="0"/>
</SECTIONS>',1,0)
INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(2,'XMLUSERLISTSETTINGS',
'<SECTIONS NETVERSION="2489"><SECTION CAPTION="FixedColumn" WIDTH="231" INDEX="-1" VISIBLE="1" SEARCH="1" SORT="ASCENDING"/>
  <SECTION CAPTION="Text" TYPE="ColumnDefinition" MASTERINDEX="5" WIDTH="136" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Phone Forwarding" TYPE="ColumnDefinition" MASTERINDEX="2" WIDTH="98" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Local" TYPE="ColumnDefinition" MASTERINDEX="8" WIDTH="53" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Mobile" TYPE="ColumnDefinition" MASTERINDEX="10" WIDTH="65" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Start" TYPE="ColumnDefinition" MASTERINDEX="6" WIDTH="114" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="End" TYPE="ColumnDefinition" MASTERINDEX="7" WIDTH="79" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Title" TYPE="CustomField" RECID="18" WIDTH="152" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Division" TYPE="CustomField" RECID="11" WIDTH="142" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Capabilities" TYPE="CustomField" RECID="12" WIDTH="107" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Today''s Calendar" TYPE="ColumnDefinition" MASTERINDEX="15" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Sip" TYPE="ColumnDefinition" MASTERINDEX="16" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Lync State" TYPE="ColumnDefinition" MASTERINDEX="17" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Home" TYPE="ColumnDefinition" MASTERINDEX="11" WIDTH="76" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Mail" TYPE="ColumnDefinition" MASTERINDEX="12" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Location" TYPE="ColumnDefinition" MASTERINDEX="13" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State name" TYPE="ColumnDefinition" MASTERINDEX="3" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State class" TYPE="ColumnDefinition" MASTERINDEX="4" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Work" TYPE="ColumnDefinition" MASTERINDEX="9" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="User Id" TYPE="ColumnDefinition" MASTERINDEX="1" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Rec Id" TYPE="ColumnDefinition" MASTERINDEX="14" WIDTH="53" VISIBLE="0" SEARCH="0"/>
</SECTIONS>',1,0)
INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(3,'XMLUSERLISTSETTINGS',
'<SECTIONS NETVERSION="2489"><SECTION CAPTION="FixedColumn" WIDTH="231" INDEX="-1" VISIBLE="1" SEARCH="1" SORT="ASCENDING"/>
  <SECTION CAPTION="Text" TYPE="ColumnDefinition" MASTERINDEX="5" WIDTH="136" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Phone Forwarding" TYPE="ColumnDefinition" MASTERINDEX="2" WIDTH="98" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Local" TYPE="ColumnDefinition" MASTERINDEX="8" WIDTH="53" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Mobile" TYPE="ColumnDefinition" MASTERINDEX="10" WIDTH="65" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Start" TYPE="ColumnDefinition" MASTERINDEX="6" WIDTH="114" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="End" TYPE="ColumnDefinition" MASTERINDEX="7" WIDTH="79" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Title" TYPE="CustomField" RECID="18" WIDTH="152" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Division" TYPE="CustomField" RECID="11" WIDTH="142" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Capabilities" TYPE="CustomField" RECID="12" WIDTH="107" VISIBLE="1" SEARCH="1"/>
  <SECTION CAPTION="Today''s Calendar" TYPE="ColumnDefinition" MASTERINDEX="15" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Sip" TYPE="ColumnDefinition" MASTERINDEX="16" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Lync State" TYPE="ColumnDefinition" MASTERINDEX="17" WIDTH="100" VISIBLE="1" SEARCH="0"/>
  <SECTION CAPTION="Home" TYPE="ColumnDefinition" MASTERINDEX="11" WIDTH="76" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Mail" TYPE="ColumnDefinition" MASTERINDEX="12" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Location" TYPE="ColumnDefinition" MASTERINDEX="13" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State name" TYPE="ColumnDefinition" MASTERINDEX="3" WIDTH="53" VISIBLE="0" SEARCH="1"/>
  <SECTION CAPTION="State class" TYPE="ColumnDefinition" MASTERINDEX="4" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Work" TYPE="ColumnDefinition" MASTERINDEX="9" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="User Id" TYPE="ColumnDefinition" MASTERINDEX="1" WIDTH="53" VISIBLE="0" SEARCH="0"/>
  <SECTION CAPTION="Rec Id" TYPE="ColumnDefinition" MASTERINDEX="14" WIDTH="53" VISIBLE="0" SEARCH="0"/>
</SECTIONS>',1,0)
  INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(1,'FORMSETTINGS','WS=Maximized'+char(13)+char(10)+'Top=1'+char(13)+char(10)+'Left=1'+char(13)+char(10)+'Width=1022'+char(13)+char(10)+'Height=736',1,0)
  INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(2,'FORMSETTINGS','WS=Maximized'+char(13)+char(10)+'Top=0'+char(13)+char(10)+'Left=0'+char(13)+char(10)+'Width=1285'+char(13)+char(10)+'Height=995',1,0)
  INSERT INTO [CLIENTSETTINGDETAIL] ([CLIENTSETTINGID],[PARAMNAME],[PARAMVALUE],[PARAMTYPE],[FORCEUSE])VALUES(3,'FORMSETTINGS','WS=Maximized'+char(13)+char(10)+'Top=1'+char(13)+char(10)+'Left=1'+char(13)+char(10)+'Width=1022'+char(13)+char(10)+'Height=736',1,0)
END
GO

-- SETTING
if not exists(select * from SETTING where PARAMNAME='DBVERSION')
begin
  insert into SETTING(PARAMNAME,PARAMVALUE) values ('DBVERSION','140')
end
GO




-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------
-- Stored Procedures
-----------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------


create procedure SPTV_GETDBVERSION @version int output
as
--  declare @version int 
  set @version = 0

  if not exists(select * from SETTING where PARAMNAME='DBVERSION')
  begin
    insert into SETTING(PARAMNAME,PARAMVALUE) values ('DBVERSION','140')
    if (@@error=0)
    begin
      set @version=140
    end
  end

  begin try
    select @version = cast(PARAMVALUE as int) from SETTING where PARAMNAME='DBVERSION'
  end try
  begin catch
      update SETTING set PARAMVALUE='140' where PARAMNAME='DBVERSION'
      set @version=140 
  end catch
go

create procedure SPTV_SETDBVERSION @version int
as
  declare @versionstring nvarchar(250)
  declare @paramname nvarchar(50)
  set @versionstring = cast(@version as nvarchar)
  set @paramname = 'DBVERSION'

  if not exists(select * from SETTING where PARAMNAME=@paramname)
  begin
    insert into SETTING(PARAMNAME,PARAMVALUE) values (@paramname,@versionstring)
  end else begin
    update SETTING set PARAMVALUE=@versionstring where PARAMNAME=@paramname
  end
go


exec SPTV_SETDBVERSION 142
go


